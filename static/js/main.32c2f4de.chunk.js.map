{"version":3,"sources":["api/getData.js","User.js","Todo.js","TodosList.js","NewTodo.js","App.js","index.js"],"names":["BASE_PATH","User","_ref","user","react_default","a","createElement","Fragment","name","propTypes","PropTypes","shape","string","isRequired","Todo","todo","id","className","onChange","type","defaultChecked","completed","title","src_User","TodosList","src_Todo","NewTodo","props","data","users","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","preventDefault","value","target","replace","valuesMap","state","setState","inputControl","objectSpread","toConsumableArray","length","handleChangeSelect","handleSubmit","onFormSubmit","errorsMap","prevState","keys","_this$state","onSubmit","noValidate","htmlFor","placeholder","autoComplete","maxLength","map","key","Component","App","copyUsers","visibleTodos","copyVisibleTodos","handleSearch","searchVal","toLowerCase","filter","join","includes","onSortByName","handleFormSubmit","concat","fetch","then","response","json","catch","error","todos","find","userId","src_NewTodo","src_TodosList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.32c2f4de.chunk.js","sourcesContent":["const BASE_PATH = 'https://jsonplaceholder.typicode.com/';\nconst TODOS_PATH = 'todos';\nconst USERS_PATH = 'users';\n\nexport const getTodos = () => fetch(`${BASE_PATH}${TODOS_PATH}`)\n  .then(response => response.json())\n  .catch(error => error);\n\nexport const getUsers = () => fetch(`${BASE_PATH}${USERS_PATH}`)\n  .then(response => response.json())\n  .catch(error => error);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <>{user.name}</>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User from './User';\n\nconst Todo = ({ todo }) => (\n  <tr>\n    <td>{todo.id}</td>\n    <td>\n      <input\n        className=\"\"\n        onChange={() => {}}\n        type=\"checkbox\"\n        defaultChecked={todo.completed}\n      />\n    </td>\n    <td className=\"task-column\">{todo.title}</td>\n    <td className=\"name-column\">\n      <User user={todo.user} />\n    </td>\n  </tr>\n);\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n    title: PropTypes.string,\n    user: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Todo from './Todo';\n\nconst TodosList = ({ todo }) => (\n  <>\n    <tbody>\n      <Todo todo={todo} />\n    </tbody>\n  </>\n);\n\nTodosList.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n    title: PropTypes.string,\n    user: PropTypes.object,\n  }).isRequired,\n};\nexport default TodosList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewTodo extends Component {\n  constructor(props, data, users) {\n    super(props, data, users);\n\n    this.state = {\n      inputControl: '',\n\n      valuesMap: {\n        id: [...this.props.data].length + 1,\n        title: '',\n        completed: false,\n        user: {\n          name: '',\n        },\n      },\n\n      errorsMap: {\n        title: '',\n        user: {\n          name: '',\n        },\n      },\n\n    };\n  }\n\n  handleChange = (event) => {\n    event.preventDefault();\n\n    const value = event.target.value.replace(/[^\\w\\d\\s]/g, '');\n    const { valuesMap } = this.state;\n\n    this.setState({\n      inputControl: value,\n      valuesMap: {\n        ...valuesMap,\n        id: [...this.props.data].length + 1,\n        ...valuesMap.user,\n        title: value,\n        inputControl: '',\n      },\n    });\n  };\n\n  handleChangeSelect = (event) => {\n    event.preventDefault();\n    const { value } = event.target;\n    const { valuesMap } = this.state;\n\n    this.setState({\n      valuesMap: {\n        ...valuesMap,\n        id: [...this.props.data].length + 1,\n\n        user: {\n          name: value,\n        },\n      },\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onFormSubmit(this.state.valuesMap);\n\n    const errorsMap = {\n      title: '',\n      user: {\n        name: '',\n      },\n    };\n\n    this.setState((prevState) => {\n      if (!prevState.errorsMap.title) {\n        errorsMap.title = 'Please enter the title';\n      }\n\n      if (!prevState.errorsMap.user.name) {\n        errorsMap.user.name = 'Please choose a user';\n      }\n\n      if (Object.keys(errorsMap).length > 0) {\n        return { errorsMap };\n      }\n\n      return true;\n    });\n  }\n\n  render() {\n    const { errorsMap, inputControl } = this.state;\n    const { users } = this.props;\n\n    return (\n      <form onSubmit={this.handleSubmit} noValidate>\n        <div className=\"form-box\">\n          <div className=\"task-field \">\n            <label htmlFor=\"todo\">\n              Todo:\n              <input\n                className=\"task-input\"\n                onChange={this.handleChange}\n                id=\"todo\"\n                name=\"title\"\n                placeholder=\"Enter task\"\n                autoComplete=\"off\"\n                value={inputControl}\n                maxLength=\"40\"\n              />\n            </label>\n            {errorsMap.title && (\n              <div className=\"error\">{errorsMap.title}</div>\n            )}\n          </div>\n          {' - '}\n          <div className=\"person-field\">\n            <select\n              className=\"person-select\"\n              name=\"name\"\n              onChange={this.handleChangeSelect}\n            >\n              <option>choose name...</option>\n\n              {users.map(user => (\n                <option name=\"name\" value={user.name} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n            {' '}\n            <button type=\"submit\">+ Add</button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  users: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onFormSubmit: PropTypes.func.isRequired,\n};\n\nexport default NewTodo;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { getUsers, getTodos } from './api/getData';\nimport TodosList from './TodosList';\nimport NewTodo from './NewTodo';\n\nclass App extends Component {\n  state = {\n    users: [],\n    copyUsers: [],\n    visibleTodos: [],\n    copyVisibleTodos: [],\n  };\n\n  async componentDidMount() {\n    const users = await getUsers();\n    const todos = await getTodos();\n\n    this.setState({\n      users,\n      copyUsers: users,\n      visibleTodos: todos.map(todo => ({\n        ...todo,\n        user: users.find(user => todo.userId === user.id),\n      })),\n\n      copyVisibleTodos: todos.map(todo => ({\n        ...todo,\n        user: users.find(user => todo.userId === user.id),\n      })),\n    });\n  }\n\n  handleSearch = (event) => {\n    const { copyVisibleTodos } = this.state;\n    const { value } = event.target;\n    const searchVal = value.toLowerCase();\n\n    this.setState({\n      visibleTodos: copyVisibleTodos.filter(todo => [...todo.title]\n        .join('')\n        .toLowerCase()\n        .includes(searchVal)),\n    });\n  };\n\n  onSortByName = (event) => {\n    event.preventDefault();\n    const { value } = event.target;\n\n    value !== 'All' ? (\n      this.setState(prevState => ({\n        visibleTodos: prevState.copyVisibleTodos.filter(\n          todo => todo.user.name === value\n        ),\n        copyUsers: prevState.users.filter(user => user.name === value),\n      }))\n    ) : (\n      this.setState(prevState => ({\n        visibleTodos: prevState.copyVisibleTodos,\n      }))\n    );\n  }\n\n  handleFormSubmit = (valuesMap) => {\n    this.setState(prevState => ({\n      visibleTodos: [...prevState.visibleTodos, valuesMap],\n    }));\n  };\n\n  render() {\n    const { copyUsers, users, visibleTodos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>TODO LIST</h1>\n        <div className=\"search\">\n          <input\n            className=\"search-field \"\n            type=\"input\"\n            placeholder=\"search tasks...\"\n            onChange={this.handleSearch}\n          />\n        </div>\n        <NewTodo\n          data={visibleTodos}\n          onFormSubmit={this.handleFormSubmit}\n          users={users}\n          key={visibleTodos.map(todo => todo.id)}\n        />\n        <span>Users:</span>\n        {copyUsers.length}\n        {', '}\n        <span>Todos:</span>\n        {visibleTodos.length}\n        {' '}\n        <p>\n          <span>completed todos: </span>\n          {visibleTodos.filter(todo => todo.completed === true).length}\n\n          <br />\n          <span>todos in progres: </span>\n          {visibleTodos.filter(todo => todo.completed === false).length}\n        </p>\n        <div className=\"table-box\">\n          <table className=\"\">\n            <thead>\n              <tr>\n                <td>№</td>\n                <td>Status</td>\n                <td>Task</td>\n                <td>\n                  <select\n                    className=\"form-control\"\n                    onChange={this.onSortByName}\n                  >\n                    {users.map(user => (\n                      <option value={user.name} key={user.id}>\n                        {user.name}\n                      </option>\n                    ))}\n\n                    <option value=\"All\" name=\"All\">\n                      Names...↴\n                    </option>\n\n                  </select>\n                </td>\n              </tr>\n            </thead>\n\n            {visibleTodos.map(todo => (\n              <TodosList todo={todo} key={todo.id} />\n            ))}\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}