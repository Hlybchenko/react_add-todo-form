{"version":3,"sources":["api/getData.js","User.js","Todo.js","TodosList.js","NewTodo.js","App.js","index.js"],"names":["BASE_PATH","User","_ref","user","react_default","a","createElement","Fragment","name","propTypes","PropTypes","shape","string","isRequired","Todo","todo","id","className","onChange","type","defaultChecked","completed","title","src_User","TodosList","src_Todo","NewTodo","props","data","users","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","preventDefault","value","target","replace","valuesMap","state","setState","inputControl","objectSpread","toConsumableArray","length","handleChangeSelect","handleSubmit","onFormSubmit","_this$state","onSubmit","htmlFor","placeholder","autoComplete","maxLength","split","filter","elem","style","color","fontSize","defaultValue","map","key","trim","disabled","Component","App","copyUsers","visibleTodos","copyVisibleTodos","handleSearch","searchVal","toLowerCase","join","includes","onSortByName","prevState","handleFormSubmit","concat","fetch","then","response","json","catch","error","todos","find","userId","src_NewTodo","src_TodosList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.cb58e4ef.chunk.js","sourcesContent":["const BASE_PATH = 'https://jsonplaceholder.typicode.com/';\nconst TODOS_PATH = 'todos';\nconst USERS_PATH = 'users';\n\nexport const getTodos = () => fetch(`${BASE_PATH}${TODOS_PATH}`)\n  .then(response => response.json())\n  .catch(error => error);\n\nexport const getUsers = () => fetch(`${BASE_PATH}${USERS_PATH}`)\n  .then(response => response.json())\n  .catch(error => error);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <>{user.name}</>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User from './User';\n\nconst Todo = ({ todo }) => (\n  <tr>\n    <td>{todo.id}</td>\n    <td>\n      <input\n        className=\"\"\n        onChange={() => {}}\n        type=\"checkbox\"\n        defaultChecked={todo.completed}\n      />\n    </td>\n    <td className=\"task-column\">{todo.title}</td>\n    <td className=\"name-column\">\n      <User user={todo.user} />\n    </td>\n  </tr>\n);\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n    title: PropTypes.string,\n    user: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Todo from './Todo';\n\nconst TodosList = ({ todo }) => (\n  <>\n    <tbody>\n      <Todo todo={todo} />\n    </tbody>\n  </>\n);\n\nTodosList.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n    title: PropTypes.string,\n    user: PropTypes.object,\n  }).isRequired,\n};\nexport default TodosList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewTodo extends Component {\n  constructor(props, data, users) {\n    super(props, data, users);\n\n    this.state = {\n      inputControl: '',\n\n      valuesMap: {\n        id: [...this.props.data].length + 1,\n        title: '',\n        completed: false,\n        user: { name: '' },\n      },\n    };\n  }\n\n  handleChange = (event) => {\n    event.preventDefault();\n\n    const value = event.target.value.replace(/[^\\w\\d\\s]/g, '');\n    const { valuesMap } = this.state;\n\n    this.setState({\n      inputControl: value,\n      valuesMap: {\n        ...valuesMap,\n        id: [...this.props.data].length + 1,\n        ...valuesMap.user,\n        title: value,\n        inputControl: '',\n      },\n    });\n  };\n\n  handleChangeSelect = (event) => {\n    event.preventDefault();\n    const { value } = event.target;\n    const { valuesMap } = this.state;\n\n    this.setState({\n      valuesMap: {\n        ...valuesMap,\n        id: [...this.props.data].length + 1,\n        user: { name: value },\n      },\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onFormSubmit(this.state.valuesMap);\n\n    const clear = () => this.setState({ inputControl: '' });\n\n    clear();\n  };\n\n  render() {\n    const { inputControl, valuesMap } = this.state;\n    const { users } = this.props;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-box\">\n          <div className=\"task-field \">\n            <label htmlFor=\"todo\">\n              Todo:\n              <input\n                className=\"task-input\"\n                onChange={this.handleChange}\n                id=\"todo\"\n                name=\"title\"\n                placeholder=\"Enter task\"\n                autoComplete=\"off\"\n                value={inputControl}\n                maxLength=\"40\"\n              />\n            </label>\n            {valuesMap.title\n              .split(' ')\n              .filter(elem => elem.length > 1)\n              .length > 1 ? (\n                ''\n              ) : (\n                <div\n                  className=\"error\"\n                  style={{ color: 'red', fontSize: '10px' }}\n                >\n                  {' '}\n                Task must have minimum 2 words\n                </div>\n              )}\n          </div>\n          {' _ '}\n          <div className=\"person-field\">\n            <select\n              className=\"person-select\"\n              name=\"name\"\n              title=\"choose name\"\n              defaultValue=\"\"\n              onChange={this.handleChangeSelect}\n            >\n              <option value=\"\">\n                choose name...\n              </option>\n\n              {users.map(user => (\n                <option name=\"name\" value={user.name} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n            {' '}\n            <button\n              className={\n                !valuesMap.title.trim()\n                || !valuesMap.user.name\n                || valuesMap.title\n                  .split(' ')\n                  .filter(elem => elem.length > 1)\n                  .length < 2 ? 'btn btn-outline-info' : 'btn btn-info'\n              }\n              type=\"submit\"\n              title=\"Click to adding task\"\n              disabled={\n                !valuesMap.title.trim()\n                || !valuesMap.user.name\n                || valuesMap.title\n                  .split(' ')\n                  .filter(elem => elem.length > 1)\n                  .length < 2\n              }\n            >\n              + Add\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  users: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onFormSubmit: PropTypes.func.isRequired,\n};\n\nexport default NewTodo;\n","import React, { Component } from 'react';\n\nimport { getUsers, getTodos } from './api/getData';\nimport TodosList from './TodosList';\nimport NewTodo from './NewTodo';\n\nclass App extends Component {\n  state = {\n    users: [],\n    copyUsers: [],\n    visibleTodos: [],\n    copyVisibleTodos: [],\n  };\n\n  async componentDidMount() {\n    const users = await getUsers();\n    const todos = await getTodos();\n\n    this.setState({\n      users,\n      copyUsers: [...users],\n      visibleTodos: todos.map(todo => ({\n        ...todo,\n        user: users.find(user => todo.userId === user.id),\n      })),\n\n      copyVisibleTodos: todos.map(todo => ({\n        ...todo,\n        user: users.find(user => todo.userId === user.id),\n      })),\n    });\n  }\n\n  handleSearch = (event) => {\n    const { copyVisibleTodos } = this.state;\n    const { value } = event.target;\n    const searchVal = value.toLowerCase();\n\n    this.setState({\n      visibleTodos: copyVisibleTodos.filter(todo => [...todo.title]\n        .join('')\n        .toLowerCase()\n        .includes(searchVal)),\n    });\n  };\n\n  onSortByName = (event) => {\n    event.preventDefault();\n    const { value } = event.target;\n\n    value !== 'All' ? (\n      this.setState(prevState => ({\n        visibleTodos: prevState.copyVisibleTodos.filter(\n          todo => todo.user.name === value\n        ),\n        copyUsers: prevState.users.filter(user => user.name === value),\n      }))\n    ) : (\n      this.setState(prevState => ({\n        visibleTodos: prevState.copyVisibleTodos,\n      }))\n    );\n  }\n\n  handleFormSubmit = (valuesMap) => {\n    this.setState(prevState => ({\n      visibleTodos: [...prevState.visibleTodos, valuesMap],\n    }));\n  };\n\n  render() {\n    const { copyUsers, users, visibleTodos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>TODO LIST</h1>\n        <div className=\"search\">\n          <input\n            className=\"search-field \"\n            type=\"input\"\n            placeholder=\"search tasks...\"\n            onChange={this.handleSearch}\n          />\n        </div>\n        <NewTodo\n          data={visibleTodos}\n          onFormSubmit={this.handleFormSubmit}\n          users={users}\n          // key={visibleTodos.map(todo => todo.id)}\n        />\n        <span>Users:</span>\n        {copyUsers.length}\n        {', '}\n        <span>Todos:</span>\n        {visibleTodos.length}\n        {' '}\n        <p>\n          <span>completed todos: </span>\n          {visibleTodos.filter(todo => todo.completed === true).length}\n\n          <br />\n          <span>todos in progres: </span>\n          {visibleTodos.filter(todo => todo.completed === false).length}\n        </p>\n        <div className=\"table-box\">\n          <table className=\"\">\n            <thead>\n              <tr>\n                <td>№</td>\n                <td>Status</td>\n                <td>Task</td>\n                <td>\n                  <select\n                    className=\"form-control\"\n                    onChange={this.onSortByName}\n                  >\n                    {users.map(user => (\n                      <option value={user.name} key={user.id}>\n                        {user.name}\n                      </option>\n                    ))}\n\n                    <option value=\"All\" name=\"All\">\n                      Names...↴\n                    </option>\n\n                  </select>\n                </td>\n              </tr>\n            </thead>\n\n            {visibleTodos.map(todo => (\n              <TodosList todo={todo} key={todo.id} />\n            ))}\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}